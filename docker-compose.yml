version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       # Porta para comunicação AMQP
      - "15672:15672"     # Interface de gerenciamento RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}  # Permite sobrescrever via variável de ambiente
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    networks:
      - microservices_network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped  # Reinicia automaticamente, exceto se parado manualmente

  users_service:
    build:
      context: ./users_service
    container_name: users_service
    ports:
      - "8001:8001"
    depends_on:
      rabbitmq:
        condition: service_healthy  # Espera o RabbitMQ estar saudável
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
    networks:
      - microservices_network
    restart: unless-stopped

  products_service:
    build:
      context: ./products_service
    container_name: products_service
    ports:
      - "8002:8002"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
    networks:
      - microservices_network
    restart: unless-stopped

  orders_service:
    build:
      context: ./orders_service
    container_name: orders_service
    ports:
      - "8003:8003"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-guest}
    networks:
      - microservices_network
    restart: unless-stopped

networks:
  microservices_network:
    driver: bridge

volumes:
  rabbitmq_data: